heat_template_version: rocky

description:
  This is a basic server deployment with a FloatingIP address allocated

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance

  domain_name:
    type: string
    default: openstack.local
    label: Default domain name for server

  server_name:
    type: string
    default: openstack-client
    label: Server Name

  image:
    type: string
    label: Image Name
    default: xenial.img
    description: Image to be used for compute instance

  instance_type:
    type: string
    label: Instance Type
    default: m1.small
    description: Type of instance (flavor) to be used

  network:
    type: string
    label: Network Name
    default: tenant
    description: Newtork name to assocaite server with

  public_net:
    type: string
    label: Public Network
    default: external
    description: Newtork name for Floating IPs

  tenant_name:
    type: string
    default: service
    label: Tenant Project Name


resources:
  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: instance_type }
      networks:
        - port: { get_resource: server_1_port }
      name: { get_param: server_name }
      config_drive: True
      user_data:
        str_replace:
          template: |
            #!/bin/bash

            cat >> /etc/hosts <<EOF
            $public_address $server_name.$domain_name $server_name
            EOF
            
            apt-get update
            apt-get install -y curl openssh-server ca-certificates
            apt-get -y install gcc libffi-dev libssl-dev python python-dev python-setuptools

            easy_install pip
            pip install -U pip
            pip install -U python-openstackclient

            mkdir -p /etc/openstack/
            chmod 777 /etc/openstack/
            mkdir -p ~ubuntu/.config/openstack/
            chown -R ubuntu:ubuntu ~ubuntu/.config

          params:
            $public_address: { get_attr: [server_1_floating_ip, floating_ip_address] }
            $domain_name: { get_param: domain_name }
            $server_name: { get_param: server_name }

  server_1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
  server_1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
  server_1_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: server_1_floating_ip }
      port_id: { get_resource: server_1_port }

outputs:
  name:
    description: values of server
    value: { get_attr: [server, name]}
  server_floating_ip:
    description: The Floating IP address of the deployed server
    value: { get_attr: [server_1_floating_ip, floating_ip_address] }
  server_info:
    description: values of server
    value: { get_attr: [server, show]}
